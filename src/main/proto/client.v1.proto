// Copyright 2016 Inscope Metrics, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package com.inscopemetrics.client.protocol;
option java_package = "com.inscopemetrics.client.protocol";

message RecordSet {
    repeated Record records = 1;
}

message Record {
    repeated AnnotationEntry annotations = 1;
    repeated DimensionEntry dimensions = 2;
    repeated MetricEntry gauges = 3;
    repeated MetricEntry counters = 4;
    repeated MetricEntry timers = 5;
    bytes id = 6;
    uint64 endMillisSinceEpoch = 7;
    uint64 startMillisSinceEpoch = 8;
}

message Unit {
    enum Type {
        SECOND = 0;
        MINUTE = 1;
        HOUR = 2;
        DAY = 3;
        WEEK = 4;
        BIT = 5;
        BYTE = 6;
        ROTATION = 7;
        DEGREE = 8;
        RADIAN = 9;
        CELSIUS = 10;
        FAHRENHEIT = 11;
        KELVIN = 12;
    }
    enum Scale {
        YOCTO = 0;
        ZEPTO = 1;
        ATTO = 2;
        FEMTO = 3;
        PICO = 4;
        NANO = 5;
        MICRO = 6;
        MILLI = 7;
        CENTI = 8;
        DECI = 9;
        DECA = 10;
        HECTO = 11;
        KILO = 12;
        MEGA = 13;
        GIGA = 14;
        TERA = 15;
        PETA = 16;
        EXA = 17;
        ZETTA = 18;
        YOTTA = 19;

        KIBI = 20;
        MEBI = 21;
        GIBI = 22;
        TEBI = 23;
        PEBI = 24;
        EXBI = 25;
        ZEBI = 26;
        YOBI = 27;

    }
    Type type = 1;
    Scale scale = 2;
}

message CompoundUnit {
    repeated Unit numerator = 1;
    repeated Unit denominator = 2;
}

message AnnotationEntry {
    string name = 1;
    string value = 2;
}

message DimensionEntry {
    string name = 1;
    string value = 2;
}

message DoubleQuantity {
    double value = 1;
    CompoundUnit unit = 2;
}

message MetricEntry {
    string name = 1;
    repeated DoubleQuantity samples = 2;
}
