// Copyright 2017 Inscope Metrics, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package com.inscopemetrics.client.protocol;
option java_package = "com.inscopemetrics.client.protocol";

message RecordSet {
    repeated Record records = 1;
}

message Record {
    repeated AnnotationEntry annotations = 1;
    repeated DimensionEntry dimensions = 2;
    repeated MetricEntry gauges = 3;
    repeated MetricEntry counters = 4;
    repeated MetricEntry timers = 5;
    bytes id = 6;
    uint64 endMillisSinceEpoch = 7;
    uint64 startMillisSinceEpoch = 8;
}

message Unit {
    message Type {
        enum Value {
            UNKNOWN = 0;

            SECOND = 1;
            MINUTE = 2;
            HOUR = 3;
            DAY = 4;
            WEEK = 5;
            BIT = 6;
            BYTE = 7;
            ROTATION = 8;
            DEGREE = 9;
            RADIAN = 10;
            CELSIUS = 11;
            FAHRENHEIT = 12;
            KELVIN = 13;
        }
    }
    message Scale {
        enum Value {
            UNKNOWN = 0;

            UNIT = 1;

            YOCTO = 2;
            ZEPTO = 3;
            ATTO = 4;
            FEMTO = 5;
            PICO = 6;
            NANO = 7;
            MICRO = 8;
            MILLI = 9;
            CENTI = 10;
            DECI = 11;
            DECA = 12;
            HECTO = 13;
            KILO = 14;
            MEGA = 15;
            GIGA = 16;
            TERA = 17;
            PETA = 18;
            EXA = 19;
            ZETTA = 20;
            YOTTA = 21;

            KIBI = 22;
            MEBI = 23;
            GIBI = 24;
            TEBI = 25;
            PEBI = 26;
            EXBI = 27;
            ZEBI = 28;
            YOBI = 29;
        }
    }
    Type.Value type = 1;
    Scale.Value scale = 2;
}

message CompoundUnit {
    repeated Unit numerator = 1;
    repeated Unit denominator = 2;
}

message AnnotationEntry {
    string name = 1;
    string value = 2;
}

message DimensionEntry {
    string name = 1;
    string value = 2;
}

message Quantity {
    oneof value {
        double doubleValue = 1;
        int64 longValue = 2;
    }
    CompoundUnit unit = 3;
}

message MetricEntry {
    string name = 1;
    repeated Quantity samples = 2;
}
